{"version":3,"sources":["components/Header/index.tsx","pages/SearchPage/index.tsx","pages/SearchHistoryPage/index.tsx","services/api.ts","components/ArtistItem/index.tsx","pages/ArtistsPage/index.tsx","components/AlbumItem/index.tsx","pages/AlbunsPage/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["Header","className","to","SearchPage","useState","searchValue","setSearchValue","history","useHistory","name","type","placeholder","autoComplete","onChange","e","target","value","id","onClick","localStorage","setItem","Date","getTime","toString","push","SearchHistoryPage","savedHistory","Object","entries","clear","map","item","parseInt","toLocaleDateString","toLocaleTimeString","api","axios","create","baseURL","params","api_key","process","ArtistItem","artist","href","url","src","image","alt","listeners","ArtistsPage","artists","setArtists","cutUrl","decodeURI","window","location","hash","split","artistName","length","useEffect","get","format","then","response","data","catch","alert","key","AlbumItem","album","AlbumsPage","albums","setAlbums","albumName","Routes","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f764afb.chunk.js","sourcesContent":["import React from \"react\";\n\n//Styles\nimport \"./styles.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1 className=\"site-title\">SlimFM</h1>\n      <nav>\n        <Link to=\"/\" className=\"menu-item\">\n          Pesquisar\n        </Link>\n        <Link to=\"/search-history\" className=\"menu-item\">\n          Histórico\n        </Link>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n//Custom\nimport \"./styles.css\";\n\n//Components\nimport Header from \"../../components/Header\";\nimport { RiSearchLine } from \"react-icons/ri\";\n\nfunction SearchPage() {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const history = useHistory();\n\n  function handleSearchArtist() {\n    if (searchValue !== \"\") {\n      localStorage.setItem(new Date().getTime().toString(), searchValue);\n      history.push(`/search-artist/${searchValue}`);\n    } else {\n      history.push(\"/\");\n    }\n  }\n\n  function handleSearchAlbum() {\n    if (searchValue !== \"\") {\n      localStorage.setItem(new Date().getTime().toString(), searchValue);\n      history.push(`/search-album/${searchValue}`);\n    } else {\n      history.push(\"/\");\n    }\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"center\">\n        <p className=\"title\">\n          Digite o nome de um artista ou de um álbum para pesquisar\n        </p>\n        <input\n          name=\"artist\"\n          type=\"text\"\n          className=\"search-bar-input\"\n          placeholder=\"Ex: Michael Jackson\"\n          autoComplete=\"off\"\n          onChange={(e) => {\n            setSearchValue(e.target.value);\n          }}\n        />\n        <div className=\"search-buttons\">\n          <a\n            id=\"search-artist\"\n            className=\"button-primary\"\n            onClick={handleSearchArtist}\n          >\n            <span className=\"button-primary-text\">Pesquisar artista</span>\n            <span className=\"button-primary-child\">\n              <RiSearchLine />\n            </span>\n          </a>\n          <a\n            id=\"search-album\"\n            className=\"button-primary\"\n            onClick={handleSearchAlbum}\n          >\n            <span className=\"button-primary-text\">Pesquisar álbum</span>\n            <span className=\"button-primary-child\">\n              <RiSearchLine />\n            </span>\n          </a>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SearchPage;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n//Custom\nimport \"./styles.css\";\nimport Header from \"../../components/Header\";\n\nfunction SearchHistoryPage() {\n  const savedHistory = Object.entries(localStorage);\n  const history = useHistory();\n\n  function handleClearHistory() {\n    localStorage.clear();\n    history.push(\"/search-history\");\n  }\n\n  return (\n    <>\n      <Header />\n      <div id=\"search-history-list\" className=\"container\">\n        <div className=\"search-history-results\">\n          <div className=\"search-history-header\">\n            <h1 className=\"search-history-title\">Seu histórico de pesquisas</h1>\n            <button\n              className=\"search-history-clear-button\"\n              onClick={handleClearHistory}\n            >\n              Limpar histórico\n            </button>\n          </div>\n          <hr />\n          <ul className=\"history-list\">\n            {savedHistory.map((item) => {\n              return (\n                <li>\n                  {new Date(parseInt(item[0])).toLocaleDateString(\"pt-BR\")} -{\" \"}\n                  {new Date(parseInt(item[0])).toLocaleTimeString(\"pt-BR\")} -{\" \"}\n                  {item[1]}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n      {/* <Footer /> */}\n    </>\n  );\n}\n\nexport default SearchHistoryPage;\n","import axios from \"axios\";\n\nconst api_key = process.env.REACT_APP_LAST_FM_API_KEY;\n\nconst api = axios.create({\n  baseURL: \"http://ws.audioscrobbler.com/2.0\",\n  params: {\n    api_key,\n  },\n});\n\nexport default api;\n","import React from \"react\";\nimport { RiPlayMiniFill } from \"react-icons/ri\";\n\n//Custom\nimport \"./styles.css\";\n\nexport interface Artist {\n  name: string;\n  listeners: string;\n  url: string;\n  image: any;\n}\n\ninterface ArtistItemProps {\n  artist: Artist;\n}\n\nconst ArtistItem: React.FC<ArtistItemProps> = ({ artist }) => {\n  return (\n    <a href={artist.url} className=\"artist-link\">\n      <article className=\"artist-item\">\n        <img\n          className=\"artist-item-img\"\n          src={\n            artist.image[3][\"#text\"]\n              ? artist.image[3][\"#text\"]\n              : \"https://via.placeholder.com/64\"\n          }\n          alt=\"Artist img\"\n        />\n        <div className=\"artist-item-body\">\n          <strong className=\"artirt-item-name\">{artist.name}</strong>\n          <h6>{artist.listeners} ouvintes</h6>\n        </div>\n        <div className=\"artist-info-icon\">\n          <RiPlayMiniFill />\n        </div>\n      </article>\n    </a>\n  );\n};\n\nexport default ArtistItem;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../../services/api\";\n\n//Custom\nimport \"./styles.css\";\n\n//Components\nimport ArtistItem, { Artist } from \"../../components/ArtistItem\";\nimport Header from \"../../components/Header\";\n\nfunction ArtistsPage() {\n  const [artists, setArtists] = useState([]);\n\n  var url = decodeURI(window.location.hash);\n  var cutUrl = url.split(\"/\");\n  const artistName = cutUrl[cutUrl.length - 1];\n\n  useEffect(() => {\n    api\n      .get(\"?method=artist.search\", {\n        params: {\n          artist: artistName,\n          format: \"json\",\n        },\n      })\n      .then((response) => {\n        setArtists(response.data[\"results\"][\"artistmatches\"][\"artist\"]);\n      })\n      .catch(() => {\n        alert(\"Erro na busca!\");\n      });\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <div id=\"artist-result\" className=\"container\">\n        <div className=\"artist-block\">\n          <h2>\n            Resultados encontrados para{\" \"}\n            <h1 className=\"artist-name\">{artistName}</h1>\n          </h2>\n          <hr />\n          <main className=\"artist-list\">\n            {artists.map((artist: Artist) => {\n              return <ArtistItem key={artist.name} artist={artist} />;\n            })}\n          </main>\n        </div>\n      </div>\n      {/* <Footer /> */}\n    </>\n  );\n}\n\nexport default ArtistsPage;\n","import React from \"react\";\nimport { RiPlayMiniFill } from \"react-icons/ri\";\n\n//Custom\nimport \"./styles.css\";\n\nexport interface Album {\n  artist: string;\n  name: string;\n  url: string;\n  image: any;\n}\n\ninterface AlbumItemProps {\n  album: Album;\n}\n\nconst AlbumItem: React.FC<AlbumItemProps> = ({ album }) => {\n  return (\n    <a href={album.url} className=\"album-link\">\n      <article className=\"album-item\">\n        <img\n          className=\"album-item-img\"\n          src={\n            album.image[3][\"#text\"]\n              ? album.image[3][\"#text\"]\n              : \"https://via.placeholder.com/64\"\n          }\n          alt=\"Album img\"\n        />\n        <div className=\"album-item-body\">\n          <strong className=\"album-item-name\">{album.name}</strong>\n          <h6>{album.artist}</h6>\n        </div>\n        <div className=\"album-info-icon\">\n          <RiPlayMiniFill />\n        </div>\n      </article>\n    </a>\n  );\n};\n\nexport default AlbumItem;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../../services/api\";\n\n//Custom\nimport \"./styles.css\";\n\n//Components\nimport Header from \"../../components/Header\";\nimport AlbumItem, { Album } from \"../../components/AlbumItem\";\n\nfunction AlbumsPage() {\n  const [albums, setAlbums] = useState([]);\n\n  var url = decodeURI(window.location.hash);\n  var cutUrl = url.split(\"/\");\n  const albumName = cutUrl[cutUrl.length - 1];\n\n  useEffect(() => {\n    api\n      .get(\"?method=album.search\", {\n        params: {\n          album: albumName,\n          format: \"json\",\n        },\n      })\n      .then((response) => {\n        setAlbums(response.data[\"results\"][\"albummatches\"][\"album\"]);\n      })\n      .catch(() => {\n        alert(\"Erro na busca!\");\n      });\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <div id=\"album-result\" className=\"container\">\n        <div className=\"album-block\">\n          <h2>\n            Resultados encontrados para{\" \"}\n            <h1 className=\"album-name\">{albumName}</h1>\n          </h2>\n          <hr />\n          <main className=\"album-list\">\n            {albums.map((album: Album) => {\n              return <AlbumItem key={album.url} album={album} />;\n            })}\n          </main>\n        </div>\n      </div>\n      {/* <Footer /> */}\n    </>\n  );\n}\n\nexport default AlbumsPage;\n","import { Route, HashRouter } from \"react-router-dom\";\nimport React from \"react\";\nimport SearchPage from \"./pages/SearchPage\";\nimport SearchHistoryPage from \"./pages/SearchHistoryPage\";\nimport ArtistsPage from \"./pages/ArtistsPage\";\nimport AlbumsPage from \"./pages/AlbunsPage\";\n\nfunction Routes() {\n  return (\n    <HashRouter>\n      <Route path=\"/\" exact component={SearchPage} />\n      <Route path=\"/search-artist/:artist\" component={ArtistsPage} />\n      <Route path=\"/search-album/:album\" component={AlbumsPage} />\n      <Route path=\"/search-history\" component={SearchHistoryPage} />\n    </HashRouter>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport \"./assets/styles/global.css\";\nimport Routes from \"./routes\";\n\nfunction App() {\n  return <Routes />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}